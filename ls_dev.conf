server {
    listen 80;
    server_name ls.dev;
    root /home/app/lilsis/public;

    passenger_enabled on;
    passenger_user app;
    # If this is a Ruby app, specify a Ruby version:
    passenger_ruby /usr/bin/ruby2.3;
    # run development mode
    passenger_app_env development;

    error_log /var/log/nginx/error.log notice;
    # to help debug rewrites:
    # add "rewrite_log on;" inside a location block
    # and the output will appear in the error.log
    # more info here: http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite_log
    
    location ~ ^/app\.php(/|$) {
        root /var/www/littlesis/symfony/web;
        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With';
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_read_timeout 300;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }

    # rewrite legacy urls to new urls
    # /org/123/name -> /entities/123
    # /org/123/name/edit -> /entities/123/edit
    # /org/123/name/addRelationship -> /entities/123/add_relationship
    # /org/123/name/anything_can_go_here -> /entities/123
    location ~ ^/(org|person)/([0-9]+)/.+/?$ {
        rewrite  ^/(org|person)/([0-9]+)/.+/edit/?$ /entities/$2/edit last;
        rewrite  ^/(org|person)/([0-9]+)/.+/addRelationship/?$ /entities/$2/add_relationship last;
        rewrite  ^/(org|person)/([0-9]+)/.+/?$ /entities/$2 last;
    }

    # rewrites entity routes with a '-'
    location ~ ^/(org|person)/([0-9]+-.+)/? {
        rewrite ^/(org|person)/([0-9]+-.+)/?(.*)$ /entities/$2/$3 last;
    }
    
    location /entity {
        try_files $uri /app.php$is_args$args;
    }

    location ~ ^/user/(.+)$ {
        try_files $uri /app.php$is_args$args;
    }

    location /local {
        try_files $uri /app.php$is_args$args;
    }
    
    location /home/notes {
         try_files $uri /app.php$is_args$args;
    }
    
    location /home/contact {
       	rewrite ^/home/contact(.*)$ /flag break;
    }

    location /industry {
        try_files $uri /app.php$is_args$args;
    }

    location ~ ^/reference/(.+)$ {
         try_files $uri /app.php$is_args$args;
    }

    location /help {
        try_files $uri /app.php$is_args$args;
    }

    location /advancedhelp {
        try_files $uri /app.php$is_args$args;
    }

    location /beginnerhelp {
        try_files $uri /app.php$is_args$args;
    }

    location /about {
        try_files $uri /app.php$is_args$args;
    }

    location /features {
        try_files $uri /app.php$is_args$args;
    }

    location /team {
        try_files $uri /app.php$is_args$args;
    }

    location /press {
        try_files $uri /app.php$is_args$args;
    }

    location /disclaimer {
        try_files $uri /app.php$is_args$args;
    }

    location /purpose {
        try_files $uri /app.php$is_args$args;
    }

    location /faq {
        try_files $uri /app.php$is_args$args;
    }

    location /status {
        try_files $uri /app.php$is_args$args;
    }

    location /modification {
        try_files $uri /app.php$is_args$args;
    }

    location /relationship/modificatons {
        try_files $uri /app.php$is_args$args;
    }
    
    location /relationship/remove {
        try_files $uri /app.php$is_args$args;
    }
    
    location /relationship/edit {
        try_files $uri /app.php$is_args$args;
    }

    location /relationship/view {
        rewrite ^/relationship/view/id/([0-9]+)$ /relationships/$1 break;
    }

    location ~ ^/list/[0-9]+/.+/(addBulk|matchRelated)$ {
        try_files $uri /app.php$is_args$args;
    }


    # location ~ ^/(org|person)/([0-9]+)/.+/edit/legacy$ {
    #     rewrite ^/(.+)/legacy$ /$1 break;
    #     try_files $uri /app.php$is_args$args;
    # } 
    

    location ~ ^/(org|person)/([0-9]+)/.+/addRelationship/?$ {
    	# This will rewrite urls that don't have a query string to the rails url
	# Urls with a query string are a legacy php request
	if ($args !~ "q=(.*)" ) {
	    rewrite  ^/(org|person)/([0-9]+)/.+/addRelationship/?$ /entities/$2/add_relationship last;
	}
    	try_files $uri /app.php$is_args$args;
    }

    location ~ ^/(org|person)/([0-9]+)/.+/addRelationship/legacy$ {
        rewrite ^/(.+)/legacy$ /$1 break;
        try_files $uri /app.php$is_args$args;
    } 

    location ~ ^/(org|person)/([0-9]+)/.+/uploadImage {
        if ($request_method = POST ) {
            return 405;
        }
        rewrite ^/(org|person)/([0-9]+)/.+/uploadImage$ /entities/$2/images break;
    }

    # http://littlesis.org/list/852/Top_Fortune_500_companies_in_NYC
    location ~ ^/list/([0-9]+)/(.+)$ {
       rewrite ^/list/([0-9]+)/(.+)$ /lists/$1 break;
    }
    
    location ~ ^/person/([0-9]+)/.+/matchDonations$ {
        rewrite ^/person/([0-9]+)/.+/matchDonations$ /entities/$1/match_donations break;
    }

    location ~ ^/person/([0-9]+)/.+/political$ {
        rewrite ^/person/([0-9]+)/.+/political$ /entities/$1/political break;
    }

    # javascript tests
    location /test/ {
        root /home/app/lilsis;
        autoindex on;
        try_files $uri =404;
    }
}

server {
    listen 80;
    server_name lsapi.dev;
    root /var/www/littlesis/symfony/web;

    location / {
        try_files $uri /app.php$is_args$args;
    }

    location ~ ^/app\.php(/|$) {
        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With';

        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_read_timeout 300;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
	}
 }
